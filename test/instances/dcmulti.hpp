/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/*                                                                           */
/*               This file is part of the program and library                */
/*    PaPILO --- Parallel Presolve for Integer and Linear Optimization       */
/*                                                                           */
/* Copyright (C) 2020  Konrad-Zuse-Zentrum                                   */
/*                     fuer Informationstechnik Berlin                       */
/*                                                                           */
/* This program is free software: you can redistribute it and/or modify      */
/* it under the terms of the GNU Lesser General Public License as published  */
/* by the Free Software Foundation, either version 3 of the License, or      */
/* (at your option) any later version.                                       */
/*                                                                           */
/* This program is distributed in the hope that it will be useful,           */
/* but WITHOUT ANY WARRANTY; without even the implied warranty of            */
/* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             */
/* GNU Lesser General Public License for more details.                       */
/*                                                                           */
/* You should have received a copy of the GNU Lesser General Public License  */
/* along with this program.  If not, see <https://www.gnu.org/licenses/>.    */
/*                                                                           */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

#ifndef PAPILO_TEST_INSTANCES_DCMULTI
#define PAPILO_TEST_INSTANCES_DCMULTI

#include "papilo/core/Problem.hpp"
#include "papilo/core/ProblemBuilder.hpp"

namespace papilo
{

Problem<double>
dcmulti()
{
   ///PROBLEM BUILDER CODE
   Vec<double> coeffobj{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,300.0,350.0,250.0,375.0,200.0,1000.0,410.0,320.0,270.0,240.0,1500.0,1200.0,1125.0,1800.0,1050.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,300.0,350.0,250.0,375.0,200.0,1000.0,410.0,320.0,270.0,240.0,1000.0,800.0,750.0,1200.0,700.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,300.0,350.0,250.0,375.0,200.0,1000.0,410.0,320.0,270.0,40.0,500.0,400.0,375.0,600.0,350.0,6.0,8.0,10.1,13.0,15.5,12.9,6.2,5.0,9.6,4.9,12.2,12.3,8.3,4.2,5.2,2.3,6.7,12.0,4.5,8.0,12.5,9.8,12.0,15.5,7.3,4.2,5.7,6.0,1.5,4.3,8.9,6.7,7.6,8.0,7.3,9.6,3.5,2.4,7.0,5.0,4.1,7.9,9.5,12.0,15.0,4.4,8.2,12.8,2.7,7.5,12.5,17.8,12.8,14.3,7.9,7.4,10.0,3.4,2.5,7.2,12.0,16.0,20.2,26.0,31.0,25.8,12.4,10.0,19.2,9.8,24.4,24.6,16.6,8.4,10.4,4.6,13.4,24.0,9.0,16.0,25.0,19.6,24.0,31.0,14.6,8.4,11.4,12.0,3.0,8.6,17.8,13.4,15.2,16.0,14.6,19.2,7.0,4.8,14.0,10.0,8.2,15.8,19.0,24.0,30.0,8.8,16.4,25.6,5.4,15.0,25.0,35.6,25.6,28.6,15.8,14.8,20.0,6.8,5.0,14.4,50.0,60.0,70.0,105.0,95.0,133.0,2.0,1.7,4.0,3.4,2.0,1.7,4.0,3.4,2.0,1.7,4.0,3.4,2.0,1.7,4.0,3.4,2.0,1.7,4.0,3.4,1.5,1.6,1.4,1.2,2.3,9.0,9.0,9.0,9.0,9.0,15.0,15.0,15.0,15.0,15.0,6.0,8.0,10.1,13.0,15.5,12.9,6.2,5.0,9.6,4.9,12.2,2.3,8.3,4.2,5.2,2.3,6.7,12.0,4.5,8.0,12.5,9.8,12.0,15.5,7.3,4.2,5.7,6.0,1.5,4.3,8.9,6.7,7.6,8.0,7.3,9.6,3.5,2.4,7.0,5.0,4.1,7.9,9.5,12.0,15.0,4.4,8.2,12.8,2.7,7.5,12.5,17.8,12.8,14.3,7.9,7.4,10.0,3.4,2.5,7.2,12.0,16.0,20.2,26.0,31.0,25.8,12.4,10.0,19.2,9.8,24.4,24.6,16.6,8.4,0.4,4.6,13.4,24.0,9.0,16.0,25.0,19.6,24.0,31.0,14.6,8.4,11.4,12.0,3.0,8.6,17.8,13.4,15.2,16.0,14.6,19.2,7.0,4.8,14.0,10.0,8.2,15.8,19.0,24.0,30.0,8.8,16.4,25.6,5.4,15.0,25.0,35.6,25.6,28.6,15.8,14.8,20.0,6.8,5.0,14.4,50.0,60.0,70.0,105.0,95.0,133.0,2.0,1.7,4.0,3.4,2.0,1.7,4.0,3.4,2.0,1.7,4.0,3.4,2.0,1.7,4.0,3.4,2.0,1.7,4.0,3.4,1.5,1.6,1.4,1.2,2.3,9.0,9.0,9.0,9.0,9.0,15.0,15.0,15.0,15.0,15.0,6.0,8.0,10.1,13.0,15.5,12.9,6.2,5.0,9.6,4.9,12.2,2.3,8.3,4.2,5.2,2.3,6.7,12.0,4.5,8.0,12.5,9.8,12.0,15.5,7.3,4.2,5.7,6.0,1.5,4.3,8.9,6.7,7.6,8.0,7.3,9.6,3.5,2.4,7.0,5.0,4.1,7.9,9.5,12.0,15.0,4.4,8.2,12.8,2.7,7.5,12.5,17.8,12.8,14.3,7.9,7.4,10.0,3.4,2.5,7.2,12.0,16.0,20.2,26.0,31.0,25.8,12.4,10.0,19.2,9.8,24.4,24.6,16.6,8.4,0.4,4.6,13.4,24.0,9.0,16.0,25.0,19.6,24.0,31.0,14.6,8.4,11.4,12.0,3.0,8.6,17.8,13.4,15.2,16.0,14.6,19.2,7.0,4.8,14.0,10.0,8.2,15.8,19.0,24.0,30.0,8.8,16.4,25.6,5.4,15.0,25.0,35.6,25.6,28.6,15.8,14.8,20.0,6.8,5.0,14.4,50.0,60.0,70.0,105.0,95.0,133.0,2.0,1.7,4.0,3.4,2.0,1.7,4.0,3.4,2.0,1.7,4.0,3.4,2.0,1.7,4.0,3.4,2.0,1.7,4.0,3.4,1.5,1.6,1.4,1.2,2.3,};
   Vec<double> lbs{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,};
   Vec<bool> lbInf{false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,};
   Vec<double> ubs{1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,};
   Vec<bool> ubInf{false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,};
   Vec<bool> isIntegral{true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,};
   Vec<bool> lhsIsInf{true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,false,true,false,true,false,false,true,true,true,true,false,true,false,true,false,false,true,true,true,true,false,true,false,true,false,false,true,true,true,true,false,true,false,true,false,false,true,true,true,true,false,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,false,true,false,true,false,false,true,true,true,true,false,true,false,true,false,false,true,true,true,true,false,true,false,true,false,false,true,true,true,true,false,true,false,true,false,false,true,true,true,true,false,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,false,true,false,true,false,false,true,true,true,true,false,true,false,true,false,false,true,true,true,true,false,true,false,true,false,false,true,true,true,true,false,true,false,true,false,false,true,true,true,true,false,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,true,true,};
   Vec<double> lhs{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,28.0,16.0,42.0,25.0,63.0,36.0,24.0,15.0,36.0,10.0,71.0,26.0,34.0,16.0,27.0,9.0,66.0,28.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,33.0,21.0,47.0,30.0,68.0,41.0,29.0,20.0,31.0,15.0,76.0,31.0,39.0,21.0,32.0,14.0,71.0,33.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,38.0,26.0,52.0,35.0,73.0,46.0,34.0,25.0,36.0,20.0,81.0,36.0,44.0,26.0,37.0,19.0,76.0,38.0,0.0,0.0,0.0,0.0,0.0,};
   Vec<bool> rhsIsInf{false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,false,false,};
   Vec<double> rhs{0.0,0.0,0.0,0.0,0.0,0.0,230.0,265.0,207.0,140.0,110.0,135.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,230.0,265.0,207.0,140.0,110.0,135.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,230.0,265.0,207.0,140.0,110.0,135.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,};
   Vec<std::tuple<int, int, double>> entries{{0,75,1.0},{0,76,1.0},{0,77,1.0},{0,78,1.0},{0,79,1.0},{0,195,-1.0},{1,135,1.0},{1,136,1.0},{1,137,1.0},{1,138,1.0},{1,139,1.0},{1,198,-1.0},{2,80,1.0},{2,81,1.0},{2,82,1.0},{2,83,1.0},{2,84,1.0},{2,196,-1.0},{3,140,1.0},{3,141,1.0},{3,142,1.0},{3,143,1.0},{3,144,1.0},{3,199,-1.0},{4,85,1.0},{4,86,1.0},{4,87,1.0},{4,88,1.0},{4,89,1.0},{4,197,-1.0},{5,145,1.0},{5,146,1.0},{5,147,1.0},{5,148,1.0},{5,149,1.0},{5,200,-1.0},{6,195,1.0},{7,196,1.0},{8,197,1.0},{9,198,1.0},{10,199,1.0},{11,200,1.0},{12,75,1.0},{12,80,1.0},{12,85,1.0},{12,90,-1.0},{12,91,-1.0},{12,92,-1.0},{12,93,-1.0},{12,94,-1.0},{12,95,-1.0},{12,96,-1.0},{12,97,-1.0},{12,98,-1.0},{12,226,-1.0},{13,135,1.0},{13,140,1.0},{13,145,1.0},{13,150,-1.0},{13,151,-1.0},{13,152,-1.0},{13,153,-1.0},{13,154,-1.0},{13,155,-1.0},{13,156,-1.0},{13,157,-1.0},{13,158,-1.0},{13,231,-1.0},{14,76,1.0},{14,81,1.0},{14,86,1.0},{14,99,-1.0},{14,100,-1.0},{14,101,-1.0},{14,102,-1.0},{14,103,-1.0},{14,104,-1.0},{14,105,-1.0},{14,106,-1.0},{14,107,-1.0},{14,227,-1.0},{15,136,1.0},{15,141,1.0},{15,146,1.0},{15,159,-1.0},{15,160,-1.0},{15,161,-1.0},{15,162,-1.0},{15,163,-1.0},{15,164,-1.0},{15,165,-1.0},{15,166,-1.0},{15,167,-1.0},{15,232,-1.0},{16,77,1.0},{16,82,1.0},{16,87,1.0},{16,108,-1.0},{16,109,-1.0},{16,110,-1.0},{16,111,-1.0},{16,112,-1.0},{16,113,-1.0},{16,114,-1.0},{16,115,-1.0},{16,116,-1.0},{16,228,-1.0},{17,137,1.0},{17,142,1.0},{17,147,1.0},{17,168,-1.0},{17,169,-1.0},{17,170,-1.0},{17,171,-1.0},{17,172,-1.0},{17,173,-1.0},{17,174,-1.0},{17,175,-1.0},{17,176,-1.0},{17,233,-1.0},{18,78,1.0},{18,83,1.0},{18,88,1.0},{18,117,-1.0},{18,118,-1.0},{18,119,-1.0},{18,120,-1.0},{18,121,-1.0},{18,122,-1.0},{18,123,-1.0},{18,124,-1.0},{18,125,-1.0},{18,229,-1.0},{19,138,1.0},{19,143,1.0},{19,148,1.0},{19,177,-1.0},{19,178,-1.0},{19,179,-1.0},{19,180,-1.0},{19,181,-1.0},{19,182,-1.0},{19,183,-1.0},{19,184,-1.0},{19,185,-1.0},{19,234,-1.0},{20,79,1.0},{20,84,1.0},{20,89,1.0},{20,126,-1.0},{20,127,-1.0},{20,128,-1.0},{20,129,-1.0},{20,130,-1.0},{20,131,-1.0},{20,132,-1.0},{20,133,-1.0},{20,134,-1.0},{20,230,-1.0},{21,139,1.0},{21,144,1.0},{21,149,1.0},{21,186,-1.0},{21,187,-1.0},{21,188,-1.0},{21,189,-1.0},{21,190,-1.0},{21,191,-1.0},{21,192,-1.0},{21,193,-1.0},{21,194,-1.0},{21,235,-1.0},{22,75,-1.0},{22,80,-1.0},{22,85,-1.0},{22,201,1.0},{22,202,1.0},{23,135,-1.0},{23,140,-1.0},{23,145,-1.0},{23,203,1.0},{23,204,1.0},{24,0,-600.0},{24,202,1.0},{25,0,180.0},{25,201,-1.0},{26,1,-300.0},{26,204,1.0},{27,1,80.0},{27,203,-1.0},{28,201,-1.0},{28,202,-1.0},{28,203,-2.0},{28,204,-2.0},{28,221,1.0},{29,10,-350.0},{29,221,1.0},{30,10,-200.0},{30,221,1.0},{31,10,1.0},{31,20,-1.0},{32,76,-1.0},{32,81,-1.0},{32,86,-1.0},{32,205,1.0},{32,206,1.0},{33,136,-1.0},{33,141,-1.0},{33,146,-1.0},{33,207,1.0},{33,208,1.0},{34,2,-600.0},{34,206,1.0},{35,2,180.0},{35,205,-1.0},{36,3,-300.0},{36,208,1.0},{37,3,80.0},{37,207,-1.0},{38,205,-1.0},{38,206,-1.0},{38,207,-2.0},{38,208,-2.0},{38,222,1.0},{39,11,-500.0},{39,222,1.0},{40,11,-350.0},{40,222,1.0},{41,11,1.0},{41,21,-1.0},{42,77,-1.0},{42,82,-1.0},{42,87,-1.0},{42,209,1.0},{42,210,1.0},{43,137,-1.0},{43,142,-1.0},{43,147,-1.0},{43,211,1.0},{43,212,1.0},{44,4,-600.0},{44,210,1.0},{45,4,180.0},{45,209,-1.0},{46,5,-300.0},{46,212,1.0},{47,5,80.0},{47,211,-1.0},{48,209,-1.0},{48,210,-1.0},{48,211,-2.0},{48,212,-2.0},{48,223,1.0},{49,12,-225.0},{49,223,1.0},{50,12,-100.0},{50,223,1.0},{51,12,1.0},{51,22,-1.0},{52,78,-1.0},{52,83,-1.0},{52,88,-1.0},{52,213,1.0},{52,214,1.0},{53,138,-1.0},{53,143,-1.0},{53,148,-1.0},{53,215,1.0},{53,216,1.0},{54,6,-600.0},{54,214,1.0},{55,6,180.0},{55,213,-1.0},{56,7,-300.0},{56,216,1.0},{57,7,80.0},{57,215,-1.0},{58,213,-1.0},{58,214,-1.0},{58,215,-2.0},{58,216,-2.0},{58,224,1.0},{59,13,-410.0},{59,224,1.0},{60,13,-200.0},{60,224,1.0},{61,13,1.0},{61,23,-1.0},{62,79,-1.0},{62,84,-1.0},{62,89,-1.0},{62,217,1.0},{62,218,1.0},{63,139,-1.0},{63,144,-1.0},{63,149,-1.0},{63,219,1.0},{63,220,1.0},{64,8,-600.0},{64,218,1.0},{65,8,180.0},{65,217,-1.0},{66,9,-300.0},{66,220,1.0},{67,9,80.0},{67,219,-1.0},{68,217,-1.0},{68,218,-1.0},{68,219,-2.0},{68,220,-2.0},{68,225,1.0},{69,14,-320.0},{69,225,1.0},{70,14,-100.0},{70,225,1.0},{71,14,1.0},{71,24,-1.0},{72,10,-1.0},{72,11,-1.0},{72,12,-1.0},{72,13,-1.0},{72,14,-1.0},{72,15,1.0},{72,16,1.0},{72,17,1.0},{72,18,1.0},{72,19,1.0},{73,15,-1.0},{73,16,1.0},{74,16,-1.0},{74,17,1.0},{75,17,-1.0},{75,18,1.0},{76,18,-1.0},{76,19,1.0},{77,90,1.0},{77,99,1.0},{77,108,1.0},{77,117,1.0},{77,126,1.0},{78,150,1.0},{78,159,1.0},{78,168,1.0},{78,177,1.0},{78,186,1.0},{79,91,1.0},{79,100,1.0},{79,109,1.0},{79,118,1.0},{79,127,1.0},{80,151,1.0},{80,160,1.0},{80,169,1.0},{80,178,1.0},{80,187,1.0},{81,92,1.0},{81,101,1.0},{81,110,1.0},{81,119,1.0},{81,128,1.0},{82,152,1.0},{82,161,1.0},{82,170,1.0},{82,179,1.0},{82,188,1.0},{83,93,1.0},{83,102,1.0},{83,111,1.0},{83,120,1.0},{83,129,1.0},{84,153,1.0},{84,162,1.0},{84,171,1.0},{84,180,1.0},{84,189,1.0},{85,94,1.0},{85,103,1.0},{85,112,1.0},{85,121,1.0},{85,130,1.0},{86,154,1.0},{86,163,1.0},{86,172,1.0},{86,181,1.0},{86,190,1.0},{87,95,1.0},{87,104,1.0},{87,113,1.0},{87,122,1.0},{87,131,1.0},{88,155,1.0},{88,164,1.0},{88,173,1.0},{88,182,1.0},{88,191,1.0},{89,96,1.0},{89,105,1.0},{89,114,1.0},{89,123,1.0},{89,132,1.0},{90,156,1.0},{90,165,1.0},{90,174,1.0},{90,183,1.0},{90,192,1.0},{91,97,1.0},{91,106,1.0},{91,115,1.0},{91,124,1.0},{91,133,1.0},{92,157,1.0},{92,166,1.0},{92,175,1.0},{92,184,1.0},{92,193,1.0},{93,98,1.0},{93,107,1.0},{93,116,1.0},{93,125,1.0},{93,134,1.0},{94,158,1.0},{94,167,1.0},{94,176,1.0},{94,185,1.0},{94,194,1.0},{95,236,1.0},{95,237,1.0},{95,238,1.0},{95,239,1.0},{95,240,1.0},{95,356,-1.0},{96,296,1.0},{96,297,1.0},{96,298,1.0},{96,299,1.0},{96,300,1.0},{96,359,-1.0},{97,241,1.0},{97,242,1.0},{97,243,1.0},{97,244,1.0},{97,245,1.0},{97,357,-1.0},{98,301,1.0},{98,302,1.0},{98,303,1.0},{98,304,1.0},{98,305,1.0},{98,360,-1.0},{99,246,1.0},{99,247,1.0},{99,248,1.0},{99,249,1.0},{99,250,1.0},{99,358,-1.0},{100,306,1.0},{100,307,1.0},{100,308,1.0},{100,309,1.0},{100,310,1.0},{100,361,-1.0},{101,356,1.0},{102,357,1.0},{103,358,1.0},{104,359,1.0},{105,360,1.0},{106,361,1.0},{107,226,1.0},{107,236,1.0},{107,241,1.0},{107,246,1.0},{107,251,-1.0},{107,252,-1.0},{107,253,-1.0},{107,254,-1.0},{107,255,-1.0},{107,256,-1.0},{107,257,-1.0},{107,258,-1.0},{107,259,-1.0},{107,387,-1.0},{108,231,1.0},{108,296,1.0},{108,301,1.0},{108,306,1.0},{108,311,-1.0},{108,312,-1.0},{108,313,-1.0},{108,314,-1.0},{108,315,-1.0},{108,316,-1.0},{108,317,-1.0},{108,318,-1.0},{108,319,-1.0},{108,392,-1.0},{109,227,1.0},{109,237,1.0},{109,242,1.0},{109,247,1.0},{109,260,-1.0},{109,261,-1.0},{109,262,-1.0},{109,263,-1.0},{109,264,-1.0},{109,265,-1.0},{109,266,-1.0},{109,267,-1.0},{109,268,-1.0},{109,388,-1.0},{110,232,1.0},{110,297,1.0},{110,302,1.0},{110,307,1.0},{110,320,-1.0},{110,321,-1.0},{110,322,-1.0},{110,323,-1.0},{110,324,-1.0},{110,325,-1.0},{110,326,-1.0},{110,327,-1.0},{110,328,-1.0},{110,393,-1.0},{111,228,1.0},{111,238,1.0},{111,243,1.0},{111,248,1.0},{111,269,-1.0},{111,270,-1.0},{111,271,-1.0},{111,272,-1.0},{111,273,-1.0},{111,274,-1.0},{111,275,-1.0},{111,276,-1.0},{111,277,-1.0},{111,389,-1.0},{112,233,1.0},{112,298,1.0},{112,303,1.0},{112,308,1.0},{112,329,-1.0},{112,330,-1.0},{112,331,-1.0},{112,332,-1.0},{112,333,-1.0},{112,334,-1.0},{112,335,-1.0},{112,336,-1.0},{112,337,-1.0},{112,394,-1.0},{113,229,1.0},{113,239,1.0},{113,244,1.0},{113,249,1.0},{113,278,-1.0},{113,279,-1.0},{113,280,-1.0},{113,281,-1.0},{113,282,-1.0},{113,283,-1.0},{113,284,-1.0},{113,285,-1.0},{113,286,-1.0},{113,390,-1.0},{114,234,1.0},{114,299,1.0},{114,304,1.0},{114,309,1.0},{114,338,-1.0},{114,339,-1.0},{114,340,-1.0},{114,341,-1.0},{114,342,-1.0},{114,343,-1.0},{114,344,-1.0},{114,345,-1.0},{114,346,-1.0},{114,395,-1.0},{115,230,1.0},{115,240,1.0},{115,245,1.0},{115,250,1.0},{115,287,-1.0},{115,288,-1.0},{115,289,-1.0},{115,290,-1.0},{115,291,-1.0},{115,292,-1.0},{115,293,-1.0},{115,294,-1.0},{115,295,-1.0},{115,391,-1.0},{116,235,1.0},{116,300,1.0},{116,305,1.0},{116,310,1.0},{116,347,-1.0},{116,348,-1.0},{116,349,-1.0},{116,350,-1.0},{116,351,-1.0},{116,352,-1.0},{116,353,-1.0},{116,354,-1.0},{116,355,-1.0},{116,396,-1.0},{117,236,-1.0},{117,241,-1.0},{117,246,-1.0},{117,362,1.0},{117,363,1.0},{118,296,-1.0},{118,301,-1.0},{118,306,-1.0},{118,364,1.0},{118,365,1.0},{119,25,-600.0},{119,363,1.0},{120,25,180.0},{120,362,-1.0},{121,26,-300.0},{121,365,1.0},{122,26,80.0},{122,364,-1.0},{123,362,-1.0},{123,363,-1.0},{123,364,-2.0},{123,365,-2.0},{123,382,1.0},{124,35,-350.0},{124,382,1.0},{125,35,-200.0},{125,382,1.0},{126,20,-1.0},{126,35,1.0},{126,45,-1.0},{127,237,-1.0},{127,242,-1.0},{127,247,-1.0},{127,366,1.0},{127,367,1.0},{128,297,-1.0},{128,302,-1.0},{128,307,-1.0},{128,368,1.0},{128,369,1.0},{129,27,-600.0},{129,367,1.0},{130,27,180.0},{130,366,-1.0},{131,28,-300.0},{131,369,1.0},{132,28,80.0},{132,368,-1.0},{133,366,-1.0},{133,367,-1.0},{133,368,-2.0},{133,369,-2.0},{133,383,1.0},{134,36,-500.0},{134,383,1.0},{135,36,-350.0},{135,383,1.0},{136,21,-1.0},{136,36,1.0},{136,46,-1.0},{137,238,-1.0},{137,243,-1.0},{137,248,-1.0},{137,370,1.0},{137,371,1.0},{138,298,-1.0},{138,303,-1.0},{138,308,-1.0},{138,372,1.0},{138,373,1.0},{139,29,-600.0},{139,371,1.0},{140,29,180.0},{140,370,-1.0},{141,30,-300.0},{141,373,1.0},{142,30,80.0},{142,372,-1.0},{143,370,-1.0},{143,371,-1.0},{143,372,-2.0},{143,373,-2.0},{143,384,1.0},{144,37,-225.0},{144,384,1.0},{145,37,-100.0},{145,384,1.0},{146,22,-1.0},{146,37,1.0},{146,47,-1.0},{147,239,-1.0},{147,244,-1.0},{147,249,-1.0},{147,374,1.0},{147,375,1.0},{148,299,-1.0},{148,304,-1.0},{148,309,-1.0},{148,376,1.0},{148,377,1.0},{149,31,-600.0},{149,375,1.0},{150,31,180.0},{150,374,-1.0},{151,32,-300.0},{151,377,1.0},{152,32,80.0},{152,376,-1.0},{153,374,-1.0},{153,375,-1.0},{153,376,-2.0},{153,377,-2.0},{153,385,1.0},{154,38,-410.0},{154,385,1.0},{155,38,-200.0},{155,385,1.0},{156,23,-1.0},{156,38,1.0},{156,48,-1.0},{157,240,-1.0},{157,245,-1.0},{157,250,-1.0},{157,378,1.0},{157,379,1.0},{158,300,-1.0},{158,305,-1.0},{158,310,-1.0},{158,380,1.0},{158,381,1.0},{159,33,-600.0},{159,379,1.0},{160,33,180.0},{160,378,-1.0},{161,34,-300.0},{161,381,1.0},{162,34,80.0},{162,380,-1.0},{163,378,-1.0},{163,379,-1.0},{163,380,-2.0},{163,381,-2.0},{163,386,1.0},{164,39,-320.0},{164,386,1.0},{165,39,-100.0},{165,386,1.0},{166,24,-1.0},{166,39,1.0},{166,49,-1.0},{167,35,-1.0},{167,36,-1.0},{167,37,-1.0},{167,38,-1.0},{167,39,-1.0},{167,40,1.0},{167,41,1.0},{167,42,1.0},{167,43,1.0},{167,44,1.0},{168,40,-1.0},{168,41,1.0},{169,41,-1.0},{169,42,1.0},{170,42,-1.0},{170,43,1.0},{171,43,-1.0},{171,44,1.0},{172,251,1.0},{172,260,1.0},{172,269,1.0},{172,278,1.0},{172,287,1.0},{173,311,1.0},{173,320,1.0},{173,329,1.0},{173,338,1.0},{173,347,1.0},{174,252,1.0},{174,261,1.0},{174,270,1.0},{174,279,1.0},{174,288,1.0},{175,312,1.0},{175,321,1.0},{175,330,1.0},{175,339,1.0},{175,348,1.0},{176,253,1.0},{176,262,1.0},{176,271,1.0},{176,280,1.0},{176,289,1.0},{177,313,1.0},{177,322,1.0},{177,331,1.0},{177,340,1.0},{177,349,1.0},{178,254,1.0},{178,263,1.0},{178,272,1.0},{178,281,1.0},{178,290,1.0},{179,314,1.0},{179,323,1.0},{179,332,1.0},{179,341,1.0},{179,350,1.0},{180,255,1.0},{180,264,1.0},{180,273,1.0},{180,282,1.0},{180,291,1.0},{181,315,1.0},{181,324,1.0},{181,333,1.0},{181,342,1.0},{181,351,1.0},{182,256,1.0},{182,265,1.0},{182,274,1.0},{182,283,1.0},{182,292,1.0},{183,316,1.0},{183,325,1.0},{183,334,1.0},{183,343,1.0},{183,352,1.0},{184,257,1.0},{184,266,1.0},{184,275,1.0},{184,284,1.0},{184,293,1.0},{185,317,1.0},{185,326,1.0},{185,335,1.0},{185,344,1.0},{185,353,1.0},{186,258,1.0},{186,267,1.0},{186,276,1.0},{186,285,1.0},{186,294,1.0},{187,318,1.0},{187,327,1.0},{187,336,1.0},{187,345,1.0},{187,354,1.0},{188,259,1.0},{188,268,1.0},{188,277,1.0},{188,286,1.0},{188,295,1.0},{189,319,1.0},{189,328,1.0},{189,337,1.0},{189,346,1.0},{189,355,1.0},{190,397,1.0},{190,398,1.0},{190,399,1.0},{190,400,1.0},{190,401,1.0},{190,517,-1.0},{191,457,1.0},{191,458,1.0},{191,459,1.0},{191,460,1.0},{191,461,1.0},{191,520,-1.0},{192,402,1.0},{192,403,1.0},{192,404,1.0},{192,405,1.0},{192,406,1.0},{192,518,-1.0},{193,462,1.0},{193,463,1.0},{193,464,1.0},{193,465,1.0},{193,466,1.0},{193,521,-1.0},{194,407,1.0},{194,408,1.0},{194,409,1.0},{194,410,1.0},{194,411,1.0},{194,519,-1.0},{195,467,1.0},{195,468,1.0},{195,469,1.0},{195,470,1.0},{195,471,1.0},{195,522,-1.0},{196,517,1.0},{197,518,1.0},{198,519,1.0},{199,520,1.0},{200,521,1.0},{201,522,1.0},{202,387,1.0},{202,397,1.0},{202,402,1.0},{202,407,1.0},{202,412,-1.0},{202,413,-1.0},{202,414,-1.0},{202,415,-1.0},{202,416,-1.0},{202,417,-1.0},{202,418,-1.0},{202,419,-1.0},{202,420,-1.0},{203,392,1.0},{203,457,1.0},{203,462,1.0},{203,467,1.0},{203,472,-1.0},{203,473,-1.0},{203,474,-1.0},{203,475,-1.0},{203,476,-1.0},{203,477,-1.0},{203,478,-1.0},{203,479,-1.0},{203,480,-1.0},{204,388,1.0},{204,398,1.0},{204,403,1.0},{204,408,1.0},{204,421,-1.0},{204,422,-1.0},{204,423,-1.0},{204,424,-1.0},{204,425,-1.0},{204,426,-1.0},{204,427,-1.0},{204,428,-1.0},{204,429,-1.0},{205,393,1.0},{205,458,1.0},{205,463,1.0},{205,468,1.0},{205,481,-1.0},{205,482,-1.0},{205,483,-1.0},{205,484,-1.0},{205,485,-1.0},{205,486,-1.0},{205,487,-1.0},{205,488,-1.0},{205,489,-1.0},{206,389,1.0},{206,399,1.0},{206,404,1.0},{206,409,1.0},{206,430,-1.0},{206,431,-1.0},{206,432,-1.0},{206,433,-1.0},{206,434,-1.0},{206,435,-1.0},{206,436,-1.0},{206,437,-1.0},{206,438,-1.0},{207,394,1.0},{207,459,1.0},{207,464,1.0},{207,469,1.0},{207,490,-1.0},{207,491,-1.0},{207,492,-1.0},{207,493,-1.0},{207,494,-1.0},{207,495,-1.0},{207,496,-1.0},{207,497,-1.0},{207,498,-1.0},{208,390,1.0},{208,400,1.0},{208,405,1.0},{208,410,1.0},{208,439,-1.0},{208,440,-1.0},{208,441,-1.0},{208,442,-1.0},{208,443,-1.0},{208,444,-1.0},{208,445,-1.0},{208,446,-1.0},{208,447,-1.0},{209,395,1.0},{209,460,1.0},{209,465,1.0},{209,470,1.0},{209,499,-1.0},{209,500,-1.0},{209,501,-1.0},{209,502,-1.0},{209,503,-1.0},{209,504,-1.0},{209,505,-1.0},{209,506,-1.0},{209,507,-1.0},{210,391,1.0},{210,401,1.0},{210,406,1.0},{210,411,1.0},{210,448,-1.0},{210,449,-1.0},{210,450,-1.0},{210,451,-1.0},{210,452,-1.0},{210,453,-1.0},{210,454,-1.0},{210,455,-1.0},{210,456,-1.0},{211,396,1.0},{211,461,1.0},{211,466,1.0},{211,471,1.0},{211,508,-1.0},{211,509,-1.0},{211,510,-1.0},{211,511,-1.0},{211,512,-1.0},{211,513,-1.0},{211,514,-1.0},{211,515,-1.0},{211,516,-1.0},{212,397,-1.0},{212,402,-1.0},{212,407,-1.0},{212,523,1.0},{212,524,1.0},{213,457,-1.0},{213,462,-1.0},{213,467,-1.0},{213,525,1.0},{213,526,1.0},{214,50,-600.0},{214,524,1.0},{215,50,180.0},{215,523,-1.0},{216,51,-300.0},{216,526,1.0},{217,51,80.0},{217,525,-1.0},{218,523,-1.0},{218,524,-1.0},{218,525,-2.0},{218,526,-2.0},{218,543,1.0},{219,60,-350.0},{219,543,1.0},{220,60,-200.0},{220,543,1.0},{221,20,-1.0},{221,45,-1.0},{221,60,1.0},{221,70,-1.0},{222,398,-1.0},{222,403,-1.0},{222,408,-1.0},{222,527,1.0},{222,528,1.0},{223,458,-1.0},{223,463,-1.0},{223,468,-1.0},{223,529,1.0},{223,530,1.0},{224,52,-600.0},{224,528,1.0},{225,52,180.0},{225,527,-1.0},{226,53,-300.0},{226,530,1.0},{227,53,80.0},{227,529,-1.0},{228,527,-1.0},{228,528,-1.0},{228,529,-2.0},{228,530,-2.0},{228,544,1.0},{229,61,-500.0},{229,544,1.0},{230,61,-350.0},{230,544,1.0},{231,21,-1.0},{231,46,-1.0},{231,61,1.0},{231,71,-1.0},{232,399,-1.0},{232,404,-1.0},{232,409,-1.0},{232,531,1.0},{232,532,1.0},{233,459,-1.0},{233,464,-1.0},{233,469,-1.0},{233,533,1.0},{233,534,1.0},{234,54,-600.0},{234,532,1.0},{235,54,180.0},{235,531,-1.0},{236,55,-300.0},{236,534,1.0},{237,55,80.0},{237,533,-1.0},{238,531,-1.0},{238,532,-1.0},{238,533,-2.0},{238,534,-2.0},{238,545,1.0},{239,62,-225.0},{239,545,1.0},{240,62,-100.0},{240,545,1.0},{241,22,-1.0},{241,47,-1.0},{241,62,1.0},{241,72,-1.0},{242,400,-1.0},{242,405,-1.0},{242,410,-1.0},{242,535,1.0},{242,536,1.0},{243,460,-1.0},{243,465,-1.0},{243,470,-1.0},{243,537,1.0},{243,538,1.0},{244,56,-600.0},{244,536,1.0},{245,56,180.0},{245,535,-1.0},{246,57,-300.0},{246,538,1.0},{247,57,80.0},{247,537,-1.0},{248,535,-1.0},{248,536,-1.0},{248,537,-2.0},{248,538,-2.0},{248,546,1.0},{249,63,-410.0},{249,546,1.0},{250,63,-200.0},{250,546,1.0},{251,23,-1.0},{251,48,-1.0},{251,63,1.0},{251,73,-1.0},{252,401,-1.0},{252,406,-1.0},{252,411,-1.0},{252,539,1.0},{252,540,1.0},{253,461,-1.0},{253,466,-1.0},{253,471,-1.0},{253,541,1.0},{253,542,1.0},{254,58,-600.0},{254,540,1.0},{255,58,180.0},{255,539,-1.0},{256,59,-300.0},{256,542,1.0},{257,59,80.0},{257,541,-1.0},{258,539,-1.0},{258,540,-1.0},{258,541,-2.0},{258,542,-2.0},{258,547,1.0},{259,64,-320.0},{259,547,1.0},{260,64,-100.0},{260,547,1.0},{261,24,-1.0},{261,49,-1.0},{261,64,1.0},{261,74,-1.0},{262,60,-1.0},{262,61,-1.0},{262,62,-1.0},{262,63,-1.0},{262,64,-1.0},{262,65,1.0},{262,66,1.0},{262,67,1.0},{262,68,1.0},{262,69,1.0},{263,65,-1.0},{263,66,1.0},{264,66,-1.0},{264,67,1.0},{265,67,-1.0},{265,68,1.0},{266,68,-1.0},{266,69,1.0},{267,412,1.0},{267,421,1.0},{267,430,1.0},{267,439,1.0},{267,448,1.0},{268,472,1.0},{268,481,1.0},{268,490,1.0},{268,499,1.0},{268,508,1.0},{269,413,1.0},{269,422,1.0},{269,431,1.0},{269,440,1.0},{269,449,1.0},{270,473,1.0},{270,482,1.0},{270,491,1.0},{270,500,1.0},{270,509,1.0},{271,414,1.0},{271,423,1.0},{271,432,1.0},{271,441,1.0},{271,450,1.0},{272,474,1.0},{272,483,1.0},{272,492,1.0},{272,501,1.0},{272,510,1.0},{273,415,1.0},{273,424,1.0},{273,433,1.0},{273,442,1.0},{273,451,1.0},{274,475,1.0},{274,484,1.0},{274,493,1.0},{274,502,1.0},{274,511,1.0},{275,416,1.0},{275,425,1.0},{275,434,1.0},{275,443,1.0},{275,452,1.0},{276,476,1.0},{276,485,1.0},{276,494,1.0},{276,503,1.0},{276,512,1.0},{277,417,1.0},{277,426,1.0},{277,435,1.0},{277,444,1.0},{277,453,1.0},{278,477,1.0},{278,486,1.0},{278,495,1.0},{278,504,1.0},{278,513,1.0},{279,418,1.0},{279,427,1.0},{279,436,1.0},{279,445,1.0},{279,454,1.0},{280,478,1.0},{280,487,1.0},{280,496,1.0},{280,505,1.0},{280,514,1.0},{281,419,1.0},{281,428,1.0},{281,437,1.0},{281,446,1.0},{281,455,1.0},{282,479,1.0},{282,488,1.0},{282,497,1.0},{282,506,1.0},{282,515,1.0},{283,420,1.0},{283,429,1.0},{283,438,1.0},{283,447,1.0},{283,456,1.0},{284,480,1.0},{284,489,1.0},{284,498,1.0},{284,507,1.0},{284,516,1.0},{285,20,1.0},{285,45,1.0},{285,70,1.0},{286,21,1.0},{286,46,1.0},{286,71,1.0},{287,22,1.0},{287,47,1.0},{287,72,1.0},{288,23,1.0},{288,48,1.0},{288,73,1.0},{289,24,1.0},{289,49,1.0},{289,74,1.0},};
   Vec<std::string> rnames{"2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291",};
   Vec<std::string> cnames{"D111","D121","D211","D221","D311","D321","D411","D421","D511","D521","G11","G21","G31","G41","G51","H11","H21","H31","H41","H51","B11","B21","B31","B41","B51","D112","D122","D212","D222","D312","D322","D412","D422","D512","D522","G12","G22","G32","G42","G52","H12","H22","H32","H42","H52","B12","B22","B32","B42","B52","D113","D123","D213","D223","D313","D323","D413","D423","D513","D523","G13","G23","G33","G43","G53","H13","H23","H33","H43","H53","B13","B23","B33","B43","B53","X1111","X1211","X1311","X1411","X1511","X2111","X2211","X2311","X2411","X2511","X3111","X3211","X3311","X3411","X3511","Y1111","Y1211","Y1311","Y1411","Y1511","Y1611","Y1711","Y1811","Y1911","Y2111","Y2211","Y2311","Y2411","Y2511","Y2611","Y2711","Y2811","Y2911","Y3111","Y3211","Y3311","Y3411","Y3511","Y3611","Y3711","Y3811","Y3911","Y4111","Y4211","Y4311","Y4411","Y4511","Y4611","Y4711","Y4811","Y4911","Y5111","Y5211","Y5311","Y5411","Y5511","Y5611","Y5711","Y5811","Y5911","X1121","X1221","X1321","X1421","X1521","X2121","X2221","X2321","X2421","X2521","X3121","X3221","X3321","X3421","X3521","Y1121","Y1221","Y1321","Y1421","Y1521","Y1621","Y1721","Y1821","Y1921","Y2121","Y2221","Y2321","Y2421","Y2521","Y2621","Y2721","Y2821","Y2921","Y3121","Y3221","Y3321","Y3421","Y3521","Y3621","Y3721","Y3821","Y3921","Y4121","Y4221","Y4321","Y4421","Y4521","Y4621","Y4721","Y4821","Y4921","Y5121","Y5221","Y5321","Y5421","Y5521","Y5621","Y5721","Y5821","Y5921","S111","S211","S311","S121","S221","S321","Z1111","Z1121","Z1211","Z1221","Z2111","Z2121","Z2211","Z2221","Z3111","Z3121","Z3211","Z3221","Z4111","Z4121","Z4211","Z4221","Z5111","Z5121","Z5211","Z5221","W11","W21","W31","W41","W51","Q111","Q211","Q311","Q411","Q511","Q121","Q221","Q321","Q421","Q521","X1112","X1212","X1312","X1412","X1512","X2112","X2212","X2312","X2412","X2512","X3112","X3212","X3312","X3412","X3512","Y1112","Y1212","Y1312","Y1412","Y1512","Y1612","Y1712","Y1812","Y1912","Y2112","Y2212","Y2312","Y2412","Y2512","Y2612","Y2712","Y2812","Y2912","Y3112","Y3212","Y3312","Y3412","Y3512","Y3612","Y3712","Y3812","Y3912","Y4112","Y4212","Y4312","Y4412","Y4512","Y4612","Y4712","Y4812","Y4912","Y5112","Y5212","Y5312","Y5412","Y5512","Y5612","Y5712","Y5812","Y5912","X1122","X1222","X1322","X1422","X1522","X2122","X2222","X2322","X2422","X2522","X3122","X3222","X3322","X3422","X3522","Y1122","Y1222","Y1322","Y1422","Y1522","Y1622","Y1722","Y1822","Y1922","Y2122","Y2222","Y2322","Y2422","Y2522","Y2622","Y2722","Y2822","Y2922","Y3122","Y3222","Y3322","Y3422","Y3522","Y3622","Y3722","Y3822","Y3922","Y4122","Y4222","Y4322","Y4422","Y4522","Y4622","Y4722","Y4822","Y4922","Y5122","Y5222","Y5322","Y5422","Y5522","Y5622","Y5722","Y5822","Y5922","S112","S212","S312","S122","S222","S322","Z1112","Z1122","Z1212","Z1222","Z2112","Z2122","Z2212","Z2222","Z3112","Z3122","Z3212","Z3222","Z4112","Z4122","Z4212","Z4222","Z5112","Z5122","Z5212","Z5222","W12","W22","W32","W42","W52","Q112","Q212","Q312","Q412","Q512","Q122","Q222","Q322","Q422","Q522","X1113","X1213","X1313","X1413","X1513","X2113","X2213","X2313","X2413","X2513","X3113","X3213","X3313","X3413","X3513","Y1113","Y1213","Y1313","Y1413","Y1513","Y1613","Y1713","Y1813","Y1913","Y2113","Y2213","Y2313","Y2413","Y2513","Y2613","Y2713","Y2813","Y2913","Y3113","Y3213","Y3313","Y3413","Y3513","Y3613","Y3713","Y3813","Y3913","Y4113","Y4213","Y4313","Y4413","Y4513","Y4613","Y4713","Y4813","Y4913","Y5113","Y5213","Y5313","Y5413","Y5513","Y5613","Y5713","Y5813","Y5913","X1123","X1223","X1323","X1423","X1523","X2123","X2223","X2323","X2423","X2523","X3123","X3223","X3323","X3423","X3523","Y1123","Y1223","Y1323","Y1423","Y1523","Y1623","Y1723","Y1823","Y1923","Y2123","Y2223","Y2323","Y2423","Y2523","Y2623","Y2723","Y2823","Y2923","Y3123","Y3223","Y3323","Y3423","Y3523","Y3623","Y3723","Y3823","Y3923","Y4123","Y4223","Y4323","Y4423","Y4523","Y4623","Y4723","Y4823","Y4923","Y5123","Y5223","Y5323","Y5423","Y5523","Y5623","Y5723","Y5823","Y5923","S113","S213","S313","S123","S223","S323","Z1113","Z1123","Z1213","Z1223","Z2113","Z2123","Z2213","Z2223","Z3113","Z3123","Z3213","Z3223","Z4113","Z4123","Z4213","Z4223","Z5113","Z5123","Z5213","Z5223","W13","W23","W33","W43","W53",};
   int nCols = 548; int nRows = 290;
   ProblemBuilder<double> pb;
   pb.reserve( 1315,290,548 );
   pb.setNumRows( nRows );
   pb.setNumCols( nCols );
   pb.setObjAll( coeffobj );
   pb.setObjOffset( 0.0 );
   pb.setColLbAll( lbs );
   pb.setColLbInfAll( lbInf );
   pb.setColUbAll( ubs );
   pb.setColUbInfAll( ubInf );
   pb.setColIntegralAll( isIntegral );
   pb.setRowLhsInfAll( lhsIsInf );
   pb.setRowRhsInfAll( rhsIsInf );
   pb.setRowLhsAll( lhs );
   pb.setRowRhsAll( rhs );
   pb.setRowNameAll( rnames );
   pb.addEntryAll( entries );
   pb.setColNameAll( cnames );
   pb.setProblemName( "dcmulti.hpp" );
   Problem<double> problem = pb.build();
   ///PROBLEM BUILDER CODE END

   return problem;
}

} // namespace papilo

#endif